// Import all of Bootstrap's CSS
@import "bootstrap/scss/bootstrap";

// Media queries for responsive text
html {
  font-size: 16px;
}

@media (max-width: 600px) {
  html {
    font-size: calc(16px + 0.5vw);
  }
}

@media (min-width: 601px) and (max-width: 1200px) {
  html {
    font-size: calc(16px + 0.3vw);
  }
}

@media (min-width: 1201px) {
  html {
    font-size: 20px;
  }
}

// Responsive texts
html {
  font-size: 16px;
}

@media (max-width: 600px) {
  html {
    font-size: calc(16px + 0.5vw);
  }
}

@media (min-width: 601px) and (max-width: 1200px) {
  html {
    font-size: calc(16px + 0.3vw);
  }
}

@media (min-width: 1201px) {
  html {
    font-size: 20px;
  }
}

// Project default
body,
#content {
  min-height: 100vh;
  min-width: 100vw;
  color: white;
  background-color: #171717;
}

* {
  box-sizing: border-box;
  margin: 0px;
  padding: 0px;
}

// Text margin was giving me extra margin here had to manually set to 0.
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}

// Project default END

// Variables
$contentChildSelector: "#content > div";

@mixin gridSize {
  grid-template-columns: 25% 1fr 1fr 1fr;
  grid-template-rows: 10% 7% 78% 5%;
}

// Variable END

// Layout of grid
#content {
  @include gridSize;
}

#content,
#{$contentChildSelector} {
  display: grid;
  border: solid 1px white;
}

#header {
  grid-column: 2 / 5;
  grid-row: 1 / 2;
}

#toolbar {
  grid-column: 2 / 5;
  grid-row: 2 / 3;
}

#sidebar {
  grid-column: 1 / 2;
  grid-row: 1 / 4;
}

#main {
  grid-column: 2 / 5;
  grid-row: 3 / 4;
}

#footer {
  grid-column: 1 / 5;
  grid-row: 4 / 5;
  place-items: center;
}

// Grid Layout END

// Header section
#header {
  place-items: center;
}

// Toolbar section
#toolbar {
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  justify-content: space-evenly;
}

.create-new-item-button {
  place-self: center;
}

.sort-item-button {
  place-self: center;
}

// Toolbar END

// Sidebar section
#sidebar {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 8% 2% 10% 5% 1fr;
  justify-content: space-evenly;
}

.project-overview-title {
  grid-column: 1 / 5;
  grid-row: 1 / 2;
  align-items: center;
  padding: 1rem;
}

.page-break {
  grid-column: 1 / 5;
}

.new-project-button {
  grid-column: 1 / 5;
  grid-row: 3 / 4;
  place-self: center;
}

.sort-item-button-projects {
  grid-column: 1 / 5;
  grid-row: 4 / 5;
  place-self: center;
}

.project-container {
  grid-column: 1 / 5;
  grid-row: 5 / 6;

  display: grid;
  grid-auto-rows: 2.5rem;
  overflow: auto;

  border-top: solid 2px white;
  margin: 1rem;
  padding: 5px;
}

// Project container and item section
.project-item {
  display: grid;
  grid-template-columns: 10% 1fr 10% 10%;
  grid-row: span 1;
  grid-column: span 4;
}

.bullet-point {
  grid-column: 1 / 2;
  place-self: center;
}

.project-name {
  grid-column: 2 / 3;
  align-self: center;
  justify-self: start;
  white-space: pre-wrap;
}
// Project container and item section END

// Sidebar END

// Footer section
.github-link {
  text-decoration: none;
}
