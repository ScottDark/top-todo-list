// Import all of Bootstrap's CSS
@import "bootstrap/scss/bootstrap";

// Media queries for responsive text
html {
  font-size: 16px;
}

@media (max-width: 600px) {
  html {
    font-size: calc(16px + 0.5vw);
  }
}

@media (min-width: 601px) and (max-width: 1200px) {
  html {
    font-size: calc(16px + 0.3vw);
  }
}

@media (min-width: 1201px) {
  html {
    font-size: 20px;
  }
}

// Responsive texts
html {
  font-size: 16px;
}

@media (max-width: 600px) {
  html {
    font-size: calc(16px + 0.5vw);
  }
}

@media (min-width: 601px) and (max-width: 1200px) {
  html {
    font-size: calc(16px + 0.3vw);
  }
}

@media (min-width: 1201px) {
  html {
    font-size: 20px;
  }
}

// Project default
body,
#content {
  min-height: 100vh;
  min-width: 100vw;
  color: white;
  background-color: #171717;
}

* {
  box-sizing: border-box;
  margin: 0px;
  padding: 0px;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

#main {
  flex: 1 0 auto; // This will allow the #main to grow and shrink as needed, but not shrink below its base size
  overflow-y: auto; // Add a vertical scrollbar when the content exceeds the height
  max-height: calc(100vh - 60px); // Adjust this value as needed
  overflow-x: hidden; // Hide the horizontal scrollbar
  box-sizing: border-box; // Include the scrollbar width in the element's total width

  // WebKit-based browsers
  overflow: overlay;

  // Firefox
  scrollbar-width: thin;
}

// Text margin was giving me extra margin here had to manually set to 0.
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}

// Project default END

// Variables
$contentChildSelector: "#content > div";

@mixin gridSize {
  grid-template-columns: 30% 1fr 1fr 1fr;
  grid-template-rows: 10% 7% 78% 5%;
}

// Variable END

// Layout of grid
#content {
  @include gridSize;
}

#content,
#{$contentChildSelector} {
  display: grid;
  border: solid 1px white;
}

#header {
  grid-column: 2 / 5;
  grid-row: 1 / 2;
}

#header > .project-name {
  grid-column: 1 / -1; /* Span all columns */
  grid-row: 1 / 2; /* Specify the 1st row */
}

#toolbar {
  grid-column: 2 / 5;
  grid-row: 2 / 3;
}

#sidebar {
  grid-column: 1 / 2;
  grid-row: 1 / 4;
  overflow-y: auto;
  height: calc(100vh - 55px);
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: minmax(auto, auto);
}

#main {
  grid-column: 2 / 5;
  grid-row: 3 / 4;
  overflow-y: auto;
}

#footer {
  grid-column: 1 / 5;
  grid-row: 4 / 5;
  place-items: center;

  display: grid;

  flex-shrink: 0; // This will prevent the #footer from shrinking
  margin-top: 0;
}

// Grid Layout END

// Header section
#header {
  place-items: center;
  grid-template-rows: auto; /* Allow the header to expand to accommodate the content */
}

#header > .project-name {
  grid-column: 1 / -1; /* Span all columns */
  grid-row: 1 / 2; /* Specify the 1st row */
  justify-self: center; /* Center horizontally */
  align-self: center; /* Center vertically */
}

// Toolbar section
#toolbar {
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr;
  justify-content: space-evenly;
}

.create-new-item-button {
  place-self: center;
}

.sort-item-button {
  place-self: center;
}

// Toolbar END

// Sidebar section
#sidebar {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 8% 2% 10% 5% 1fr;
  justify-content: space-evenly;
}

.project-overview-title {
  grid-column: 1 / 5;
  grid-row: 1 / 2;
  align-items: center;
  padding: 1rem;
}

.page-break {
  grid-column: 1 / 5;
}

.new-project-button {
  grid-column: 1 / 5;
  grid-row: 3 / 4;
  place-self: center;
}

.sort-button-projects {
  grid-column: 1 / 5;
  grid-row: 4 / 5;
  place-self: center;
}

.project-container {
  grid-column: 1 / 5;
  grid-row: 5 / 6;

  display: grid;
  grid-auto-rows: 2.5rem;
  overflow: auto;
  gap: 0.5rem;

  border-top: solid 2px white;
  margin: 1rem;
  padding: 5px;
}

// Project container and item section
.project-item {
  display: grid;
  grid-template-columns: 10% 1fr auto auto;
  grid-template-areas: "bullet project-name dropdown delete";
  grid-row: span 1;
  grid-column: span 4;
  align-items: center;
}

.bullet-point {
  grid-area: bullet;
  place-self: center;
}

.project-name {
  grid-area: project-name;
  align-self: center;
  justify-self: start;
  max-width: 280px;

  background: none;
  border: none;
  opacity: 1;
  font-family: inherit;
  font-size: inherit;
  padding: 0;
  color: inherit;
  outline: none;
}

#project-priority-dropdown {
  grid-area: dropdown;
  place-self: center;
  width: 100%;
  margin-right: 5px;
}

.delete-item {
  grid-area: delete;
  place-self: center;
  width: 85%;
  height: 85%;
  margin-left: 5px;
}

// Project container and item section END

// Sidebar END

// Main section
#main {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-content: flex-start;
  margin-bottom: 0;
}

#main .to-do-list-item {
  display: grid;
  grid-template-columns: 1fr auto; // 1fr for the item content, auto for the delete button
}

.item-container {
  display: flex;
  align-items: center; // Optional: if you want to align the items vertically
  margin-bottom: 10px;
  padding-left: 10px;
  gap: 10px;
}

.item-name {
  background-color: black; // or use 'black' for a black background
  color: white;
}

#main .delete-item {
  width: auto; // Reset the width
  height: auto; // Reset the height
  float: right; // Position it on the right side of the container
}

// Footer section

.github-link {
  text-decoration: none;
}
